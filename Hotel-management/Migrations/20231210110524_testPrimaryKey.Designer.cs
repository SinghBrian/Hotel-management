// <auto-generated />
using System;
using Hotel_management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_management.Migrations
{
    [DbContext(typeof(Hotel_managementContext))]
    [Migration("20231210110524_testPrimaryKey")]
    partial class testPrimaryKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hotel_management.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hotel_management.Models.Commentaire", b =>
                {
                    b.Property<int>("CommentaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentaireId"), 1L, 1);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CommentaireTexte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentaireId");

                    b.HasIndex("ClientId");

                    b.ToTable("Commentaire");
                });

            modelBuilder.Entity("Hotel_management.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactureId"), 1L, 1);

                    b.Property<float>("MontantFacture")
                        .HasColumnType("real");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("FactureId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("Hotel_management.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Hotel_management.Models.Commentaire", b =>
                {
                    b.HasOne("Hotel_management.Models.Client", null)
                        .WithMany("Comments")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("Hotel_management.Models.Facture", b =>
                {
                    b.HasOne("Hotel_management.Models.Reservation", null)
                        .WithMany("Facts")
                        .HasForeignKey("ReservationId");
                });

            modelBuilder.Entity("Hotel_management.Models.Reservation", b =>
                {
                    b.HasOne("Hotel_management.Models.Client", null)
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("Hotel_management.Models.Client", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Hotel_management.Models.Reservation", b =>
                {
                    b.Navigation("Facts");
                });
#pragma warning restore 612, 618
        }
    }
}
